<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bit.tsigner.model.LoginDao">
  
  <select id="login" parameterType="map" resultType="com.bit.tsigner.model.entity.LoginVo">
  	SELECT * FROM USERS WHERE USER_ID=#{id} AND PASSWORD=#{pw}
  </select>
  
  <select id="getComnList" parameterType="map" resultType="com.bit.tsigner.model.entity.CommunityVo">
  	SELECT * FROM COMMUNITY WHERE CMNT_WRITER_ID=#{id} AND CMNT_TYPE=#{type}
  </select>
  
  <select id="getListTotal" parameterType="map" resultType="int">
  	SELECT COUNT(*) AS TOTAL FROM COMMUNITY A JOIN COMMUNITY_REPLY B ON A.CMNT_SEQ=B.CMNT_SEQ WHERE A.CMNT_TYPE=#{type} AND A.CMNT_SEQ=#{num}
  </select>
  
  <select id="emailLogin" parameterType="String" resultType="com.bit.tsigner.model.entity.LoginVo">
  	SELECT * FROM USERS WHERE USER_EMAIL=#{email}
  </select>
  
  <insert id="join" parameterType="map">
  	INSERT USERS (USER_ID, PASSWORD, USER_NAME, USER_NICK_NAME,USER_EMAIL,USER_TEL,USER_BIRTH,USER_RESI_NUM,USER_MEM_LEV,CREATE_DATE) VALUES (#{id},#{pw},#{userName},#{nickName},#{email},#{tel},#{birth},#{gender},1,now())
  </insert>
  
  <insert id="join_level_mgt" parameterType="map">
  	INSERT USER_LEVEL_MGT (USER_ID,POINT,CMNT_REGI_CNT,REPLY_CNT) VALUES (#{id},0,0,0);
  </insert>
  
  <select id="idCheck" parameterType="String" resultType="String">
  	SELECT USER_ID FROM USERS WHERE USER_ID=#{id};
  </select>
  
  <select id="emailCheck" parameterType="String" resultType="String">
  	SELECT USER_EMAIL FROM USERS WHERE USER_EMAIL=#{email};
  </select>
  
  <select id="searchId" parameterType="map" resultType="String">
  	SELECT USER_ID FROM USERS WHERE USER_NAME=#{name} AND USER_EMAIL=#{email}
  </select>
  
  <select id="searchPw" parameterType="map" resultType="Boolean">
  	SELECT PASSWORD FROM USERS WHERE USER_ID=#{id} AND USER_EMAIL=#{email}
  </select>
  
  <update id="editPw" parameterType="map">
	UPDATE USERS SET PASSWORD=#{editPw},MODI_DATE=now() WHERE USER_ID=#{id} AND USER_EMAIL=#{email}
  </update>
  
  <insert id="easyJoin" parameterType="map">
    	INSERT USERS (USER_ID, PASSWORD, USER_NAME, USER_NICK_NAME,USER_EMAIL,SNS_TYPE,SNS_ID,SNS_CONN_DATE,USER_MEM_LEV,CREATE_DATE,PROFILE_ROOT) VALUES (#{id},#{pw},#{userName},#{nickName},#{email},#{type},#{snsId},now(),1,now(),#{root})
  </insert>
  
   <select id="getUser" parameterType="String" resultType="com.bit.tsigner.model.entity.LoginVo">
  	SELECT A.*,B.POINT FROM USERS A LEFT OUTER JOIN USER_LEVEL_MGT B ON A.USER_ID=B.USER_ID WHERE A.USER_ID=#{id}
  </select>
  
  <update id="updateUser" parameterType="map">
  	UPDATE USERS SET USER_NAME=#{name},USER_NICK_NAME=#{nick},USER_TEL=#{tel},USER_BIRTH=#{birth},MODI_DATE=now(),PROFILE_ROOT=#{path},PROFILE_FILE=#{file} WHERE USER_ID=#{id}
  </update>
  
  <select id="checkUser" parameterType="map" resultType="String">
  	SELECT PASSWORD FROM USERS WHERE USER_ID=#{id} AND USER_EMAIL=#{email} AND PASSWORD=#{pw}
  </select>
  
  <delete id="leaveUser" parameterType="String">
  	DELETE FROM USER_LEVEL_MGT WHERE USER_ID=#{id}
  </delete>
  
  <delete id="leaveUser2" parameterType="String">
  	DELETE FROM USERS WHERE USER_ID=#{id}
  </delete>
  
  <insert id="getPayDb" parameterType="map">
  	INSERT INTO USER_PAY (USER_ID,PAY_INFO,PAY_COST,PAY_DAY,PAY_CHECKIN,PAY_CHECKOUT) VALUES (#{user},#{title},#{pay},now(),#{in},#{out});
  </insert>
  
  <select id="getPayList" parameterType="String" resultType="com.bit.tsigner.model.entity.PayVo">
  	SELECT * FROM USER_PAY WHERE USER_ID=#{id};
  </select>

  <delete id="leaveUser3" parameterType="String">
  	DELETE FROM USER_PAY WHERE USER_ID=#{id}
  </delete>
    
  <delete id="leaveTogether" parameterType="String">
  	DELETE FROM COMMUNITY WHERE CMNT_WRITER_ID=#{id} AND CMNT_TYPE=3
  </delete>  
  
  <update id="leaveBbs" parameterType="String">
  	UPDATE COMMUNITY SET CMNT_WRITER_ID='탈퇴한 계정' WHERE CMNT_WRITER_ID=#{id}
  </update>
  
  <select id="getInquiryList" parameterType="map" resultType="com.bit.tsigner.model.entity.SupportVo">
  	SELECT * FROM INQUIRY WHERE USER_ID=#{id}
  </select>
  
  <select id="getInqResult" parameterType="map" resultType="int">
  	SELECT COUNT(*) FROM INQUIRY_REPLY WHERE INQ_SEQ = #{num}
  </select>
  
  <delete id="leaveInquiry" parameterType="String">
  	DELETE FROM INQUIRY WHERE USER_ID=#{id}
  </delete>
  
  <delete id="leavePlaner" parameterType="String">
   	DELETE FROM PLAN_MGT WHERE USER_ID=#{id}
  </delete>
</mapper>
